[versions]
# Commons
kotlin = "1.8.10"
json = "20180813"
okHttp = "4.9.3"

# Android
androidToolsPlugin = "7.4.0"

# AndroidX
androidx-core ="1.3.2"
androidx-appcompat = "1.2.0"
androidx-constraintlayout = "2.0.4"

# JUnit 4
jUnit4 = "4.13.2"

# JUnit 5
jUnit-jupiter = "5.6.2"
jUnit-vintage = "5.6.2"
jUnit-platform = "1.6.2"
jUnit-mockitoExt = "3.4.6"

# Tests Tools
assertJ = "3.18.1"
elmyr = "1.3.1"
mockitoKotlin = "2.2.0"

# Tools
detekt = "1.17.0"
dokka = "1.7.20"
unmock = "0.7.5"

fuzzyWuzzy = "1.2.0"

versionsPluginGradle = "0.33.0"

kotlinGrammarParser = "c35b50fa44"

# Datadog
datadogSdk = "1.17.0"
datadogPluginGradle = "1.7.0"

[libraries]

# Classpaths
# Gradle version catalog doesn't allow names to end with plugin, that is why strange names
androidToolsPluginGradle = { module = "com.android.tools.build:gradle", version.ref = "androidToolsPlugin" }
kotlinPluginGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
dokkaPluginGradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
unmockPluginGradle = { module = "de.mobilej.unmock:UnMockPlugin", version.ref = "unmock" }
detektPluginGradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }

versionsPluginGradle = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "versionsPluginGradle" }

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }

okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
json = { module = "org.json:json", version.ref = "json" }

# AndroidX

androidx-core = { module = "androidx.core:core-ktx", version.ref="androidx-core" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref="androidx-appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref="androidx-constraintlayout" }

assertJ = { module = "org.assertj:assertj-core", version.ref = "assertJ" }

# JUnit 4
jUnit4 = { module = "junit:junit", version.ref = "jUnit4" }

# JUnit 5
jUnit-platform = { module = "org.junit.platform:junit-platform-launcher", version.ref = "jUnit-platform" }
jUnit-jupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jUnit-jupiter" }
jUnit-parameters = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jUnit-jupiter" }
jUnit-jupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jUnit-jupiter" }
jUnit-vintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "jUnit-vintage" }
jUnit-mockitoExt = { module = "org.mockito:mockito-junit-jupiter", version.ref = "jUnit-mockitoExt" }

# Test tools
elmyr-core = { module = "com.github.xgouchet.Elmyr:core", version.ref = "elmyr" }
elmyr-inject = { module = "com.github.xgouchet.Elmyr:inject", version.ref = "elmyr" }
elmyr-jUnit4 = { module = "com.github.xgouchet.Elmyr:junit4", version.ref = "elmyr" }
elmyr-jUnit5 = { module = "com.github.xgouchet.Elmyr:junit5", version.ref = "elmyr" }
elmyr-jvm = { module = "com.github.xgouchet.Elmyr:jvm", version.ref = "elmyr" }
mockitoKotlin = { module = "com.nhaarman.mockitokotlin2:mockito-kotlin", version.ref = "mockitoKotlin" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# Tools
detektCli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
okHttpMock = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttp" }

fuzzyWuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzyWuzzy" }

# Datadog
datadogSdk = { module = "com.datadoghq:dd-sdk-android", version.ref = "datadogSdk" }
datadogPluginGradle = { module = "com.datadoghq:dd-sdk-android-gradle-plugin", version.ref = "datadogPluginGradle" }

[bundles]

jUnit5 = [
    "jUnit-platform",
    "jUnit-jupiterApi",
    "jUnit-jupiterEngine",
    "jUnit-vintage",
    "jUnit-mockitoExt",
    "jUnit-parameters"
]

testTools = [
    "assertJ",
    "elmyr-core",
    "elmyr-inject",
    "elmyr-jUnit5",
    "elmyr-jvm",
    "mockitoKotlin",
    "kotlinReflect"
]

[plugins]
versionsPluginGradle = { id = "com.github.ben-manes.versions", version.ref = "versionsPluginGradle" }
